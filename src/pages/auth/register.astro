---
import { isValidEmail, sendEmailVerificationLink } from "@src/utils/email";

import { auth } from "@src/auth/lucia";
import { SqliteError } from "better-sqlite3";

let emailInput = "";
let errorMessage = "";

// check for form submissions
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const name = formData.get("name");

  const email = formData.get("email");
  const { ADMIN_EMAIL } = import.meta.env;
  const isAdminEmail = email === ADMIN_EMAIL;

  const password = formData.get("password");
  if (typeof email === "string") {
    emailInput = email;
  }
  // basic check
  const validPassword =
    typeof password === "string" &&
    password.length >= 6 &&
    password.length <= 255;
  if (isValidEmail(email) && validPassword) {
    try {
      const user = await auth.createUser({
        key: {
          providerId: "email", // auth method
          providerUserId: email.toLowerCase(), // unique id when using "email" auth method
          password, // hashed by Lucia
        },
        attributes: {
          name,
          email,
          is_admin: isAdminEmail ? 1 : 0,
          is_approved: isAdminEmail ? 1 : 0,
        },
      });
      const session = await auth.createSession({
        userId: user.userId,
        attributes: {},
      });
      Astro.locals.auth.setSession(session); // set session cookie
      return Astro.redirect("/auth/waiting-room/", 302);
    } catch (e) {
      // this part depends on the database you're using
      // check for unique constraint error in user table
      if (e instanceof SqliteError && e.code === "SQLITE_CONSTRAINT_UNIQUE") {
        errorMessage = "Account already exists";
        Astro.response.status = 400;
      } else {
        console.log("error");
        console.log(e);
        console.log(e.message);
        errorMessage = "An unknown error occurred";
        Astro.response.status = 500;
      }
    }
  } else {
    errorMessage = "Invalid input";
    Astro.response.status = 400;
  }
}

const session = await Astro.locals.auth.validate();
if (session) {
  console.log("session user");
  console.log(session.user);
  if (!session.user.isApproved) {
    return Astro.redirect("/auth/waiting-room/");
  }
  return Astro.redirect("/");
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Email & password auth with Lucia</title>
  </head>
  <body>
    <h1>Sign up</h1>
    <form method="post">
      <label for="name">Name</label>
      <input name="name" id="name" /><br />
      <label for="email">Email</label>
      <input name="email" id="email" value={emailInput} /><br />
      <label for="password">Password</label>
      <input type="password" name="password" id="password" /><br />
      <input type="submit" />
    </form>
    <p class="error">{errorMessage}</p>
    <a href="/auth/login/">Sign in</a>
  </body>
</html>
